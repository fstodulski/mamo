{
  "openapi": "3.0.0",
  "info": {
    "title": "Payments",
    "version": "1.6",
    "contact": {
      "name": "api@mamopay.com"
    }
  },
  "servers": [
    {
      "url": "https://sandbox.dev.business.mamopay.com/manage_api/v1",
      "description": "Sandbox server"
    },
    {
      "url": "https://business.mamopay.com/manage_api/v1",
      "description": "Production server"
    }
  ],
  "components": {
    "securitySchemes": {
      "ApiKeyAuth": {
        "name": "Authorization",
        "type": "apiKey",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "Authorization": [
        "Bearer sk-123abc-abcd-1234-1234-123123123123"
      ]
    }
  ],
  "paths": {
    "/links": {
      "post": {
        "servers": [
          {
            "url": "https://business.mamopay.com/manage_api/v1/links",
            "description": "Production server"
          },
          {
            "url": "https://sandbox.dev.business.mamopay.com/manage_api/v1/links",
            "description": "Sandbox server"
          }
        ],
        "tags": [
          "Payment Links"
        ],
        "summary": "Create Payment Link",
        "description": "API to generate vanilla and subscription payment links. \n ### Payment Status\n Once your customer completes a payment, the redirect URL will be appended with the following params\n - createdAt: The date the charge was captured at\n - paymentLinkId: The payment link id\n - status: indicates the payment status, whether captured or failed\n - transactionId: The transaction / charge id related to the payment\n \n You may also get notified about a payment's status by setting up a webhook. Details [here](https://mamopay.readme.io/reference/post_webhooks)\n \n A third approach to check the transaction status is by calling our transaction info API [here](https://mamopay.readme.io/reference/get_charges-chargeid)\n \n **Sample redirect url after a successful payment**\n https://www.mamopay.com/?createdAt=2023-08-09-16-42-35&paymentLinkId=MB-LINK-3216D27C9D&status=captured&transactionId=MPB-CHRG-BEE56990A9\n \n\n### For Payment Testing\n To make payments with different use cases on the test environment, you can use the card details below:\n\n| Card Number                                                   | Payment Status | 3DS | Address Required | Country |\n |:-------------------------------------------------------------:|:---------------------:|:-------:|:-------:|:-----:|\n | 4659 1055 6905 1157                                           | Success    | X  | X  | GB |\n | 4242 4242 4242 4242                                           | Success    | ✓  | X  | GB |\n | 4111 1111 1111 1111                                           | Success    | ✓  | ✓  | US |\n | 4567 3613 2598 1788                                           | Fail       | X  | X  | GB |\n | 4095 2548 0264 2505                                           | Fail       | X  | ✓  | US |\n\n- CVV: 123\n - Expiry: 01/28\n\n\n ### 3DS\n If prompted for a password, enter **Checkout1!**\n \n ### Subscriptions\n When setting up subscriptions, if both end_date and payment_quantity were defined, end_date takes precedence.\n\n ",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 75,
                    "description": "The title of the payment link",
                    "default": "Chocolate Box - Small"
                  },
                  "description": {
                    "type": "string",
                    "maxLength": 75,
                    "description": "Payment description. This will appear on the payment checkout page.",
                    "default": "12pcs Chocolate Box"
                  },
                  "capacity": {
                    "type": "integer",
                    "description": "The number of times a payment link can be used, if null the link can be used indefinitely. The capacity will be ignored when the subscription params exist."
                  },
                  "active": {
                    "type": "boolean",
                    "default": true
                  },
                  "return_url": {
                    "type": "string",
                    "format": "uri",
                    "description": "The URL which the customer will be redirected to after a successful payment.",
                    "default": "https://myawesomewebsite.com/paymentSuccess"
                  },
                  "failure_return_url": {
                    "type": "string",
                    "format": "uri",
                    "description": "The URL which the customer will be redirected to after a failure payment.",
                    "default": "https://failureurl.com/paymentFailure"
                  },
                  "processing_fee_percentage": {
                    "type": "number",
                    "minimum": 2,
                    "default": 3
                  },
                  "amount": {
                    "type": "number",
                    "minimum": 2,
                    "description": "amount could be 0 with save_card 'required' option for card verification",
                    "default": 119.99
                  },
                  "amount_currency": {
                    "type": "string",
                    "enum": [
                      "AED",
                      "USD",
                      "EUR",
                      "GBP",
                      "SAR"
                    ],
                    "default": "AED"
                  },
                  "link_type": {
                    "type": "string",
                    "enum": [
                      "standalone",
                      "modal",
                      "inline"
                    ],
                    "description": "Type of link to be created.",
                    "default": "standalone"
                  },
                  "enable_tabby": {
                    "type": "boolean",
                    "description": "Enables the ability for customers to buy now and pay later.",
                    "default": false
                  },
                  "enable_message": {
                    "type": "boolean",
                    "description": "Enables the ability for customers to add a message during the checkout process.",
                    "default": false
                  },
                  "enable_tips": {
                    "type": "boolean",
                    "description": "Enables the tips option. This will be displayed on the first screen.",
                    "default": false
                  },
                  "save_card": {
                    "type": "string",
                    "enum": [
                      "off",
                      "optional",
                      "required"
                    ],
                    "description": "Allows the merchant to enable the option to store card details to be used later on for Merchant Initiated Transactions.",
                    "default": "off"
                  },
                  "enable_customer_details": {
                    "type": "boolean",
                    "description": "Enables adding customer details such as the name, email, and phone number. This screen will be displayed before the payment details screen.",
                    "default": false
                  },
                  "enable_quantity": {
                    "type": "boolean",
                    "description": "When enabled, customers can specify the number of items they intend to purchase. This quantity will serve as a multiplier for the base amount.",
                    "default": false
                  },
                  "enable_qr_code": {
                    "type": "boolean",
                    "description": "Adds the ability to verify a payment through a QR code.",
                    "default": false
                  },
                  "send_customer_receipt": {
                    "type": "boolean",
                    "description": "Enables the sending of customer receipts.",
                    "default": false
                  },
                  "payment_methods": {
                    "type": "array",
                    "description": "An array of the accepted payment methods, with 'card' always included as the default option, and wallet for Apple Pay and Google Pay. Example to accept all: ['card', 'wallet']"
                  },
                  "rules": {
                    "type": "object",
                    "description": "Setting the rule for payment link",
                    "properties": {
                      "allowed": {
                        "type": "array",
                        "description": "An array of one or more rules",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "bins"
                              ],
                              "description": "name of rules"
                            },
                            "list": {
                              "type": "array",
                              "description": "value of bins"
                            },
                            "decline_message": {
                              "type": "string",
                              "description": "Custom decline message for this rule"
                            }
                          }
                        }
                      }
                    }
                  },
                  "subscription": {
                    "type": "object",
                    "description": "to be populated if this payment link is for a recurring payment. Otherwise, this property can be left out. REQUIRES Premium Business Plan to be enabled.",
                    "properties": {
                      "frequency": {
                        "type": "string",
                        "enum": [
                          "annually",
                          "monthly",
                          "weekly"
                        ],
                        "description": "defines the interval that this subscription will be run on."
                      },
                      "frequency_interval": {
                        "type": "integer",
                        "minimum": 1,
                        "description": "defines how often this subscription will run. This will be based on the frequency property defined above."
                      },
                      "start_date": {
                        "type": "string",
                        "pattern": "\\d{4}\\/\\d{2}\\/\\d{2}",
                        "description": "the first date this subscription will run on."
                      },
                      "end_date": {
                        "type": "string",
                        "pattern": "\\d{4}\\/\\d{2}\\/\\d{2}",
                        "description": "the last date this subscription could run on."
                      },
                      "payment_quantity": {
                        "type": "integer",
                        "description": "number of times this subscription will occur. If end_date defined, end_date takes precedence."
                      }
                    }
                  },
                  "first_name": {
                    "type": "string",
                    "description": "The first name of customer which will pre-populate in card info step."
                  },
                  "last_name": {
                    "type": "string",
                    "description": "The last name of customer which will pre-populate in card info step."
                  },
                  "email": {
                    "type": "string",
                    "description": "The email of customer which will pre-populate in card info step."
                  },
                  "custom_data": {
                    "type": "object"
                  },
                  "external_id": {
                    "type": "string",
                    "description": "The external ID of your choice to associate with payments captured by this payment link."
                  },
                  "hold_and_charge_later": {
                    "type": "boolean",
                    "default": false,
                    "description": "Indicates whether to place the payment on hold and charge it later using the \"captures\" API."
                  },
                  "payouts_share": {
                    "type": "object",
                    "properties": {
                      "recipient_id": {
                        "type": "string",
                        "description": "The ID of an already added recipient that the transaction amount will be shared with."
                      },
                      "percentage_to_recipient": {
                        "type": "number",
                        "description": "The percentage of the transaction amount that will be sent to the recipient."
                      },
                      "recipient_pays_fees": {
                        "type": "boolean",
                        "description": "Whether Mamo fees for a given transaction will be passed on to the recipient."
                      }
                    }
                  }
                },
                "required": [
                  "title"
                ],
                "example": {
                  "title": "Chocolate Box - Small",
                  "description": "12pcs Chocolate Box",
                  "capacity": 1,
                  "active": true,
                  "return_url": "https://myawesomewebsite.com/paymentSuccess",
                  "failure_return_url": "https://failurewebsite.com/paymentFailure",
                  "processing_fee_percentage": 3,
                  "amount": 119.99,
                  "amount_currency": "AED",
                  "enable_message": true,
                  "enable_tips": true,
                  "save_card": "optional",
                  "enable_tabby": true,
                  "link_type": "modal",
                  "enable_customer_details": true,
                  "payment_methods": [
                    "card",
                    "wallet"
                  ],
                  "rules": {
                    "allowed": [
                      {
                        "type": "bins"
                      },
                      {
                        "list": [
                          "424242"
                        ]
                      },
                      {
                        "decline_message": "Custom decline message for this rule"
                      }
                    ]
                  },
                  "subscription": {
                    "frequency": "monthly",
                    "frequency_interval": 1,
                    "start_date": "2023/01/01",
                    "end_date": "2023/02/31",
                    "payment_quantity": 5
                  },
                  "first_name": "first name",
                  "last_name": "last name",
                  "email": "email@mamopay.com",
                  "custom_data": {
                    "val1": true,
                    "val2": "custom value"
                  },
                  "external_id": "ORDER-12345",
                  "hold_and_charge_later": false
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer <your sandbox api key>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "capacity": {
                      "type": "integer"
                    },
                    "active": {
                      "type": "boolean"
                    },
                    "return_url": {
                      "type": "string"
                    },
                    "failure_return_url": {
                      "type": "string"
                    },
                    "processing_fee_percentage": {
                      "type": "number"
                    },
                    "link_type": {
                      "type": "string"
                    },
                    "amount": {
                      "type": "number"
                    },
                    "amount_currency": {
                      "type": "string"
                    },
                    "send_customer_receipt": {
                      "type": "boolean"
                    },
                    "enable_tabby": {
                      "type": "boolean"
                    },
                    "enable_message": {
                      "type": "boolean"
                    },
                    "enable_tips": {
                      "type": "boolean"
                    },
                    "save_card": {
                      "type": "string"
                    },
                    "enable_quantity": {
                      "type": "boolean"
                    },
                    "enable_customer_details": {
                      "type": "boolean"
                    },
                    "payment_url": {
                      "type": "string"
                    },
                    "first_name": {
                      "type": "string"
                    },
                    "last_name": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "custom_data": {
                      "type": "object"
                    },
                    "external_id": {
                      "type": "string"
                    },
                    "payment_methods": {
                      "type": "array"
                    },
                    "rules": {
                      "type": "object",
                      "properties": {
                        "allowed": {
                          "type": "array",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "bins"
                              ]
                            },
                            "list": {
                              "type": "array"
                            },
                            "decline_message": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "subscription": {
                      "type": "object",
                      "properties": {
                        "identifier": {
                          "type": "string"
                        },
                        "repeats_every": {
                          "type": "string"
                        },
                        "frequency_interval": {
                          "type": "integer"
                        },
                        "start_date": {
                          "type": "string"
                        },
                        "end_date": {
                          "type": "string"
                        },
                        "payment_quantity": {
                          "type": "integer"
                        },
                        "frequency": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "example": {
                    "id": "MB-LINK-D8B07FB8C7",
                    "title": "Chocolate Box - Small",
                    "description": "12pcs Chocolate Box",
                    "capacity": 10,
                    "active": true,
                    "return_url": "https://myawesomewebsite.com/paymentSuccess",
                    "failure_return_url": "https://myfailureurl.com/paymentFailure",
                    "amount": 119.99,
                    "send_customer_receipt": true,
                    "payment_url": "https://staging.business.mamopay.com/pay/dong22-579f10",
                    "payment_methods": [
                      "card",
                      "wallet"
                    ],
                    "rules": {
                      "allowed": [
                        {
                          "type": "bins"
                        },
                        {
                          "list": [
                            "424242"
                          ]
                        },
                        {
                          "decline_message": "Custom decline message for this rule"
                        }
                      ]
                    },
                    "subscription": {
                      "identifier": "MPB-SUB-2162171A86",
                      "frequency": "monthly",
                      "frequency_interval": 1,
                      "start_date": "2023/01/31",
                      "end_date": "2023/03/31",
                      "payment_quantity": 5
                    },
                    "custom_data": {
                      "internal_customer_id": "0114120d-c394-4cce-9cdb-4ccbae605748",
                      "val1": true,
                      "val2": "custom value"
                    },
                    "external_id": "ORDER-12345"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorised",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "messages": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "messages": [
                      "Unauthorized"
                    ],
                    "error_code": "UNAUTHORIZED"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Invalid request"
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "messages": {
                      "type": "array"
                    },
                    "error_code": {
                      "type": "string"
                    },
                    "errors": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "example": {
                    "messages": [
                      "Title can't be blank",
                      "Title is too short (minimum is 1 character)"
                    ],
                    "error_code": "VALIDATION_FAILED",
                    "errors": {
                      "title": [
                        "can't be blank",
                        "is too short (minimum is 1 character)"
                      ]
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error"
          }
        }
      },
      "get": {
        "servers": [
          {
            "url": "https://business.mamopay.com/manage_api/v1/links",
            "description": "Production server"
          },
          {
            "url": "https://sandbox.dev.business.mamopay.com/manage_api/v1/links",
            "description": "Sandbox server"
          }
        ],
        "tags": [
          "Payment Links"
        ],
        "summary": "Fetching Payment Links",
        "description": "Fetches all payment links for a given business\n\n",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer <your sandbox api key>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 75,
                            "description": "The title of the payment link",
                            "default": "Chocolate Box - Small"
                          },
                          "description": {
                            "type": "string",
                            "maxLength": 75,
                            "description": "Payment description. This will appear on the payment checkout page.",
                            "default": "12pcs Chocolate Box"
                          },
                          "capacity": {
                            "type": "integer",
                            "description": "The number of times a payment link can be used. The capacity will be ignored when the subscription params exist.",
                            "default": 1
                          },
                          "active": {
                            "type": "boolean",
                            "default": true
                          },
                          "return_url": {
                            "type": "string",
                            "format": "uri",
                            "description": "The URL which the customer will be redirected to after a successful payment.",
                            "default": "https://myawesomewebsite.com/paymentSuccess"
                          },
                          "processing_fee_percentage": {
                            "type": "number",
                            "minimum": 2,
                            "default": 3
                          },
                          "amount": {
                            "type": "number",
                            "minimum": 2,
                            "default": 119.99
                          },
                          "amount_currency": {
                            "type": "string",
                            "enum": [
                              "AED",
                              "USD",
                              "EUR",
                              "GBP",
                              "SAR"
                            ],
                            "default": "AED"
                          },
                          "link_type": {
                            "type": "string",
                            "enum": [
                              "standalone",
                              "modal",
                              "inline"
                            ],
                            "description": "Type of link to be created.",
                            "default": "standalone"
                          },
                          "enable_tabby": {
                            "type": "boolean",
                            "description": "Enables the ability for customers to buy now and pay later.",
                            "default": false
                          },
                          "enable_message": {
                            "type": "boolean",
                            "description": "Enables the ability for customers to add a message during the checkout process.",
                            "default": false
                          },
                          "enable_tips": {
                            "type": "boolean",
                            "description": "Enables the tips option. This will be displayed on the first screen.",
                            "default": false
                          },
                          "enable_customer_details": {
                            "type": "boolean",
                            "description": "Enables adding customer details such as the name, email, and phone number. This screen will be displayed before the payment details screen.",
                            "default": false
                          },
                          "enable_quantity": {
                            "type": "boolean",
                            "description": "When enabled, customers can specify the number of items they intend to purchase. This quantity will serve as a multiplier for the base amount.",
                            "default": false
                          },
                          "enable_qr_code": {
                            "type": "boolean",
                            "description": "Adds the ability to verify a payment through a QR code.",
                            "default": false
                          },
                          "send_customer_receipt": {
                            "type": "boolean",
                            "description": "Enables the sending of customer receipts.",
                            "default": false
                          },
                          "save_card": {
                            "type": "string",
                            "enum": [
                              "off",
                              "optional",
                              "required"
                            ],
                            "description": "Allows the merchant to enable the option to store card details to be used later on for Merchant Initiated Transactions.",
                            "default": "off"
                          },
                          "payment_methods": {
                            "type": "array",
                            "description": "An array of accepted payment methods, card always apart of default option. Example: ['card', 'wallet']"
                          },
                          "rules": {
                            "type": "object",
                            "description": "Setting the rule for payment link",
                            "properties": {
                              "allowed": {
                                "type": "array",
                                "description": "An array of one or more rules",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "bins"
                                      ],
                                      "description": "name of rules"
                                    },
                                    "list": {
                                      "type": "array",
                                      "description": "value of bins"
                                    },
                                    "decline_message": {
                                      "type": "string",
                                      "description": "Custom decline message for this rule"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "subscription": {
                            "type": "object",
                            "description": "to be populated if this payment link is for a recurring payment. Otherwise, this property can be left out. REQUIRES Premium Business Plan to be enabled.",
                            "properties": {
                              "frequency": {
                                "type": "string",
                                "enum": [
                                  "annually",
                                  "monthly",
                                  "weekly"
                                ],
                                "description": "defines the interval that this subscription will be run on."
                              },
                              "frequency_interval": {
                                "type": "integer",
                                "minimum": 1,
                                "description": "defines how often this subscription will run. This will be based on the frequency property defined above."
                              },
                              "end_date": {
                                "type": "string",
                                "pattern": "\\d{4}\\/\\d{2}\\/\\d{2}",
                                "description": "the last date this subscription could run on."
                              },
                              "payment_quantity": {
                                "type": "integer",
                                "description": "number of times this subscription will occur. If end_date defined, end_date takes precedence."
                              }
                            }
                          },
                          "first_name": {
                            "type": "string",
                            "description": "The first name of customer which will pre-populate in card info step."
                          },
                          "last_name": {
                            "type": "string",
                            "description": "The last name of customer which will pre-populate in card info step."
                          },
                          "email": {
                            "type": "string",
                            "description": "The email of customer which will pre-populate in card info step."
                          },
                          "payouts_share": {
                            "type": "object",
                            "properties": {
                              "recipient_id": {
                                "type": "string",
                                "description": "The ID of an already added recipient that the transaction amount will be shared with."
                              },
                              "percentage_to_recipient": {
                                "type": "number",
                                "description": "The percentage of the transaction amount that will be sent to the recipient."
                              },
                              "recipient_pays_fees": {
                                "type": "boolean",
                                "description": "Whether Mamo fees for a given transaction will be passed on to the recipient."
                              }
                            }
                          },
                          "custom_data": {
                            "type": "object"
                          }
                        }
                      }
                    },
                    "pagination_meta": {
                      "type": "object",
                      "properties": {
                        "page": {
                          "type": "number"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "total_pages": {
                          "type": "number"
                        },
                        "next_page": {
                          "type": "number"
                        },
                        "prev_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total_count": {
                          "type": "number"
                        }
                      }
                    }
                  },
                  "example": {
                    "data": [
                      {
                        "name": "Chocolate Box - Small"
                      },
                      {
                        "description": "12pcs Chocolate Box"
                      },
                      {
                        "capacity": 1
                      },
                      {
                        "active": true
                      },
                      {
                        "return_url": "https://myawesomewebsite.com/paymentSuccess"
                      },
                      {
                        "processing_fee_percentage": 3
                      },
                      {
                        "amount": 119.99
                      },
                      {
                        "amount_currency": "AED"
                      },
                      {
                        "enable_message": true
                      },
                      {
                        "enable_tips": true
                      },
                      {
                        "enable_tabby": true
                      },
                      {
                        "link_type": "modal"
                      },
                      {
                        "enable_customer_details": true
                      },
                      {
                        "save_card": "optional"
                      },
                      {
                        "hold_and_charge_later": false
                      },
                      {
                        "payment_methods": [
                          "card",
                          "wallet"
                        ]
                      },
                      {
                        "rules": {
                          "allowed": [
                            {
                              "type": "bins"
                            },
                            {
                              "list": [
                                "424242"
                              ]
                            },
                            {
                              "decline_message": "Custom decline message for this rule"
                            }
                          ]
                        }
                      },
                      {
                        "subscription": {
                          "frequency": "monthly",
                          "frequency_interval": 1,
                          "end_date": "2023/01/31",
                          "payment_quantity": 5
                        }
                      },
                      {
                        "first_name": "first name"
                      },
                      {
                        "last_name": "last name"
                      },
                      {
                        "email": "email@mamopay.com"
                      },
                      {
                        "payouts_share": {
                          "recipient_id": "REP-123",
                          "percentage_to_recipient": 10,
                          "recipient_pays_fees": false
                        }
                      },
                      {
                        "custom_data": {
                          "val1": true,
                          "val2": "custom value"
                        }
                      }
                    ],
                    "pagination_meta": {
                      "page": 1,
                      "per_page": 10,
                      "total_pages": 5,
                      "next_page": 2,
                      "prev_page": null,
                      "from": 1,
                      "to": 10,
                      "total_count": 47
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorised",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "messages": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "messages": [
                      "Unauthorized"
                    ],
                    "error_code": "UNAUTHORIZED"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/links/{linkId}": {
      "patch": {
        "servers": [
          {
            "url": "https://business.mamopay.com/manage_api/v1/links/{linkId}",
            "description": "Production server"
          },
          {
            "url": "https://sandbox.dev.business.mamopay.com/manage_api/v1/links/{linkId}",
            "description": "Sandbox server"
          }
        ],
        "tags": [
          "Payment Links"
        ],
        "summary": "Update Payment Link",
        "description": "Allows a user to update payment link details\n\n",
        "parameters": [
          {
            "in": "path",
            "name": "linkId",
            "schema": {
              "type": "string",
              "default": "MB-LINK-6BB7CA8DC7"
            },
            "required": true,
            "description": "Payment link ID",
            "example": "MB-LINK-6BB7CA8DC7"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer <your sandbox api key>"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 75,
                    "description": "The title of the payment link",
                    "default": "Chocolate Box - Small"
                  },
                  "description": {
                    "type": "string",
                    "maxLength": 75,
                    "description": "Payment description. This will appear on the payment checkout page.",
                    "default": "12pcs Chocolate Box"
                  },
                  "capacity": {
                    "type": "integer",
                    "description": "The number of times a payment link can be used. The capacity will be ignored when the subscription params exist.",
                    "default": 1
                  },
                  "active": {
                    "type": "boolean",
                    "default": true
                  },
                  "return_url": {
                    "type": "string",
                    "format": "uri",
                    "description": "The URL which the customer will be redirected to after a successful payment.",
                    "default": "https://myawesomewebsite.com/paymentSuccess"
                  },
                  "failure_return_url": {
                    "type": "string",
                    "format": "uri",
                    "description": "The URL which the customer will be redirected to after a failure payment.",
                    "default": "https://failureurl.com/paymentFailure"
                  },
                  "processing_fee_percentage": {
                    "type": "number",
                    "minimum": 2,
                    "default": 3
                  },
                  "amount": {
                    "type": "number",
                    "minimum": 2,
                    "description": "amount could be 0 with save_card 'required' option for card verification",
                    "default": 119.99
                  },
                  "amount_currency": {
                    "type": "string",
                    "enum": [
                      "AED",
                      "USD",
                      "EUR",
                      "GBP",
                      "SAR"
                    ],
                    "default": "AED"
                  },
                  "link_type": {
                    "type": "string",
                    "enum": [
                      "standalone",
                      "modal",
                      "inline"
                    ],
                    "description": "Type of link to be created.",
                    "default": "standalone"
                  },
                  "enable_tabby": {
                    "type": "boolean",
                    "description": "Enables the ability for customers to buy now and pay later.",
                    "default": false
                  },
                  "enable_message": {
                    "type": "boolean",
                    "description": "Enables the ability for customers to add a message during the checkout process.",
                    "default": false
                  },
                  "enable_tips": {
                    "type": "boolean",
                    "description": "Enables the tips option. This will be displayed on the first screen.",
                    "default": false
                  },
                  "save_card": {
                    "type": "string",
                    "enum": [
                      "off",
                      "optional",
                      "required"
                    ],
                    "default": "off",
                    "description": "Allows the merchant to enable the option to store card details to be used later on for Merchant Initiated Transactions."
                  },
                  "enable_customer_details": {
                    "type": "boolean",
                    "description": "Enables adding customer details such as the name, email, and phone number. This screen will be displayed before the payment details screen.",
                    "default": false
                  },
                  "enable_quantity": {
                    "type": "boolean",
                    "description": "When enabled, customers can specify the number of items they intend to purchase. This quantity will serve as a multiplier for the base amount.",
                    "default": false
                  },
                  "enable_qr_code": {
                    "type": "boolean",
                    "description": "Adds the ability to verify a payment through a QR code.",
                    "default": false
                  },
                  "send_customer_receipt": {
                    "type": "boolean",
                    "description": "Enables the sending of customer receipts.",
                    "default": false
                  },
                  "payment_methods": {
                    "type": "array",
                    "description": "An array of accepted payment methods, card always apart of default option. Example: ['card', 'wallet']"
                  },
                  "rules": {
                    "type": "object",
                    "description": "Setting the rule for payment link",
                    "properties": {
                      "allowed": {
                        "type": "array",
                        "description": "An array of one or more rules",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "bins"
                              ],
                              "description": "name of rules"
                            },
                            "list": {
                              "type": "array",
                              "description": "value of bins"
                            },
                            "decline_message": {
                              "type": "string",
                              "description": "Custom decline message for this rule"
                            }
                          }
                        }
                      }
                    }
                  },
                  "subscription": {
                    "type": "object",
                    "description": "to be populated if this payment link is for a recurring payment. Otherwise, this property can be left out. REQUIRES Premium Business Plan to be enabled.",
                    "properties": {
                      "frequency": {
                        "type": "string",
                        "enum": [
                          "annually",
                          "monthly",
                          "weekly"
                        ],
                        "description": "defines the interval that this subscription will be run on."
                      },
                      "frequency_interval": {
                        "type": "integer",
                        "minimum": 1,
                        "description": "defines how often this subscription will run. This will be based on the frequency property defined above."
                      },
                      "start_date": {
                        "type": "string",
                        "pattern": "\\d{4}\\/\\d{2}\\/\\d{2}",
                        "description": "the first date this subscription will run on."
                      },
                      "end_date": {
                        "type": "string",
                        "pattern": "\\d{4}\\/\\d{2}\\/\\d{2}",
                        "description": "the last date this subscription could run on."
                      },
                      "payment_quantity": {
                        "type": "integer",
                        "description": "number of times this subscription will occur. If end_date defined, end_date takes precedence."
                      }
                    }
                  },
                  "first_name": {
                    "type": "string",
                    "description": "The first name of customer which will pre-populate in card info step."
                  },
                  "last_name": {
                    "type": "string",
                    "description": "The last name of customer which will pre-populate in card info step."
                  },
                  "email": {
                    "type": "string",
                    "description": "The email of customer which will pre-populate in card info step."
                  },
                  "external_id": {
                    "type": "string"
                  },
                  "hold_and_charge_later": {
                    "type": "boolean",
                    "default": false,
                    "description": "Indicates whether to place the payment on hold and charge it later using the \"captures\" API."
                  },
                  "custom_data": {
                    "type": "object"
                  },
                  "payouts_share": {
                    "type": "object",
                    "properties": {
                      "recipient_id": {
                        "type": "string",
                        "description": "The ID of an already added recipient that the transaction amount will be shared with."
                      },
                      "percentage_to_recipient": {
                        "type": "number",
                        "description": "The percentage of the transaction amount that will be sent to the recipient."
                      },
                      "recipient_pays_fees": {
                        "type": "boolean",
                        "description": "Whether Mamo fees for a given transaction will be passed on to the recipient."
                      }
                    }
                  }
                },
                "example": {
                  "name": "Chocolate Box - Small",
                  "description": "12pcs Chocolate Box",
                  "capacity": 15,
                  "active": true,
                  "return_url": "https://myawesomewebsite.com/paymentSuccess",
                  "failure_return_url": "https://failurewebsite.com/paymentFailure",
                  "processing_fee_percentage": 3,
                  "amount": 219.99,
                  "amount_currency": "AED",
                  "enable_message": true,
                  "enable_tips": true,
                  "save_card": "string",
                  "enable_tabby": true,
                  "link_type": "modal",
                  "enable_customer_details": true,
                  "payment_methods": [
                    "card",
                    "wallet"
                  ],
                  "rules": {
                    "allowed": [
                      {
                        "type": "bins"
                      },
                      {
                        "list": [
                          "424242"
                        ]
                      },
                      {
                        "decline_message": "Custom decline message for this rule"
                      }
                    ]
                  },
                  "subscription": {
                    "frequency": "monthly",
                    "frequency_interval": 1,
                    "start_date": "2023/01/01",
                    "end_date": "2023/01/31",
                    "payment_quantity": 5
                  },
                  "first_name": "first name",
                  "last_name": "last name",
                  "email": "email@mamopay.com",
                  "external_id": "external_id_1",
                  "custom_data": {
                    "val1": true,
                    "val2": "custom value"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "capacity": {
                      "type": "integer"
                    },
                    "active": {
                      "type": "boolean"
                    },
                    "return_url": {
                      "type": "string"
                    },
                    "failure_return_url": {
                      "type": "string"
                    },
                    "processing_fee_percentage": {
                      "type": "number"
                    },
                    "link_type": {
                      "type": "string"
                    },
                    "amount": {
                      "type": "number"
                    },
                    "amount_currency": {
                      "type": "string"
                    },
                    "send_customer_receipt": {
                      "type": "boolean"
                    },
                    "enable_tabby": {
                      "type": "boolean"
                    },
                    "enable_message": {
                      "type": "boolean"
                    },
                    "enable_tips": {
                      "type": "boolean"
                    },
                    "save_card": {
                      "type": "string"
                    },
                    "enable_quantity": {
                      "type": "boolean"
                    },
                    "enable_customer_details": {
                      "type": "boolean"
                    },
                    "payment_url": {
                      "type": "string"
                    },
                    "first_name": {
                      "type": "string"
                    },
                    "last_name": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "external_id": {
                      "type": "string"
                    },
                    "custom_data": {
                      "type": "object"
                    },
                    "payment_methods": {
                      "type": "array"
                    },
                    "rules": {
                      "type": "object",
                      "properties": {
                        "allowed": {
                          "type": "array",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "bins"
                              ]
                            },
                            "list": {
                              "type": "array"
                            },
                            "decline_message": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "subscription": {
                      "type": "object",
                      "properties": {
                        "identifier": {
                          "type": "string"
                        },
                        "repeats_every": {
                          "type": "string"
                        },
                        "frequency_interval": {
                          "type": "integer"
                        },
                        "start_date": {
                          "type": "string"
                        },
                        "end_date": {
                          "type": "string"
                        },
                        "payment_quantity": {
                          "type": "integer"
                        },
                        "frequency": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "example": {
                    "id": "MB-LINK-D8B07FB8C7",
                    "name": "Chocolate Box - Small",
                    "description": "12pcs Chocolate Box",
                    "capacity": 15,
                    "active": true,
                    "return_url": "https://myawesomewebsite.com/paymentSuccess",
                    "failure_return_url": "https://failurewebsite.com/paymentFailure",
                    "amount": 219.99,
                    "send_customer_receipt": true,
                    "payment_url": "https://staging.business.mamopay.com/pay/dong22-579f10",
                    "external_id": "exteral_id_1",
                    "payment_methods": [
                      "card",
                      "wallet"
                    ],
                    "hold_and_charge_later": false,
                    "rules": {
                      "allowed": [
                        {
                          "type": "bins"
                        },
                        {
                          "list": [
                            "424242"
                          ]
                        },
                        {
                          "decline_message": "Custom decline message for this rule"
                        }
                      ]
                    },
                    "subscription": {
                      "identifier": "MPB-SUB-2162171A86",
                      "frequency": "monthly",
                      "frequency_interval": 1,
                      "start_date": "2023/01/01",
                      "end_date": "2023/01/31",
                      "payment_quantity": 5
                    },
                    "custom_data": {
                      "internal_customer_id": "0114120d-c394-4cce-9cdb-4ccbae605748",
                      "val1": true,
                      "val2": "custom value"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorised",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "messages": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "messages": [
                      "Unauthorized"
                    ],
                    "error_code": "UNAUTHORIZED"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Invalid request"
          },
          "500": {
            "description": "Unexpected error"
          }
        }
      },
      "delete": {
        "servers": [
          {
            "url": "https://business.mamopay.com/manage_api/v1/links/{linkId}",
            "description": "Production server"
          },
          {
            "url": "https://sandbox.dev.business.mamopay.com/manage_api/v1/links/{linkId}",
            "description": "Sandbox server"
          }
        ],
        "tags": [
          "Payment Links"
        ],
        "summary": "Delete Payment Link",
        "description": "Allows a user to delete payment link\n\n",
        "parameters": [
          {
            "in": "path",
            "name": "linkId",
            "schema": {
              "type": "string",
              "default": "MB-LINK-6BB7CA8DC7"
            },
            "required": true,
            "description": "Payment link ID",
            "example": "MB-LINK-6BB7CA8DC7"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer <your sandbox api key>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "example": {
                    "success": true
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorised",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "messages": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "messages": [
                      "Unauthorized"
                    ],
                    "error_code": "UNAUTHORIZED"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Invalid request"
          },
          "500": {
            "description": "Unexpected error"
          }
        }
      },
      "get": {
        "servers": [
          {
            "url": "https://business.mamopay.com/manage_api/v1/links/{linkId}",
            "description": "Production server"
          },
          {
            "url": "https://sandbox.dev.business.mamopay.com/manage_api/v1/links/{linkId}",
            "description": "Sandbox server"
          }
        ],
        "tags": [
          "Payment Links"
        ],
        "summary": "Fetch Payment Link Info",
        "description": "Allows a user to fetch payment link details\n\n",
        "parameters": [
          {
            "in": "path",
            "name": "linkId",
            "schema": {
              "type": "string",
              "default": "MB-LINK-6BB7CA8DC7"
            },
            "required": true,
            "description": "Payment link ID",
            "example": "MB-LINK-6BB7CA8DC7"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer <your sandbox api key>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 75,
                      "description": "The title of the payment link",
                      "default": "Chocolate Box - Small"
                    },
                    "description": {
                      "type": "string",
                      "maxLength": 75,
                      "description": "Payment description. This will appear on the payment checkout page.",
                      "default": "12pcs Chocolate Box"
                    },
                    "capacity": {
                      "type": "integer",
                      "description": "The number of times a payment link can be used. The capacity will be ignored when the subscription params exist.",
                      "default": 1
                    },
                    "active": {
                      "type": "boolean",
                      "default": true
                    },
                    "return_url": {
                      "type": "string",
                      "format": "uri",
                      "description": "The URL which the customer will be redirected to after a successful payment.",
                      "default": "https://myawesomewebsite.com/paymentSuccess"
                    },
                    "processing_fee_percentage": {
                      "type": "number",
                      "minimum": 2,
                      "default": 3
                    },
                    "amount": {
                      "type": "number",
                      "minimum": 2,
                      "default": 119.99
                    },
                    "amount_currency": {
                      "type": "string",
                      "enum": [
                        "AED",
                        "USD",
                        "EUR",
                        "GBP",
                        "SAR"
                      ],
                      "default": "AED"
                    },
                    "link_type": {
                      "type": "string",
                      "enum": [
                        "standalone",
                        "modal",
                        "inline"
                      ],
                      "description": "Type of link to be created.",
                      "default": "standalone"
                    },
                    "enable_tabby": {
                      "type": "boolean",
                      "description": "Enables the ability for customers to buy now and pay later.",
                      "default": false
                    },
                    "enable_message": {
                      "type": "boolean",
                      "description": "Enables the ability for customers to add a message during the checkout process.",
                      "default": false
                    },
                    "enable_tips": {
                      "type": "boolean",
                      "description": "Enables the tips option. This will be displayed on the first screen.",
                      "default": false
                    },
                    "enable_customer_details": {
                      "type": "boolean",
                      "description": "Enables adding customer details such as the name, email, and phone number. This screen will be displayed before the payment details screen.",
                      "default": false
                    },
                    "enable_quantity": {
                      "type": "boolean",
                      "description": "When enabled, customers can specify the number of items they intend to purchase. This quantity will serve as a multiplier for the base amount.",
                      "default": false
                    },
                    "enable_qr_code": {
                      "type": "boolean",
                      "description": "Adds the ability to verify a payment through a QR code.",
                      "default": false
                    },
                    "send_customer_receipt": {
                      "type": "boolean",
                      "description": "Enables the sending of customer receipts.",
                      "default": false
                    },
                    "save_card": {
                      "type": "string",
                      "enum": [
                        "off",
                        "optional",
                        "required"
                      ],
                      "description": "Allows the merchant to enable the option to store card details to be used later on for Merchant Initiated Transactions.",
                      "default": "off"
                    },
                    "payment_methods": {
                      "type": "array",
                      "description": "An array of accepted payment methods, card always apart of default option. Example: ['card', 'wallet']"
                    },
                    "rules": {
                      "type": "object",
                      "description": "Setting the rule for payment link",
                      "properties": {
                        "allowed": {
                          "type": "array",
                          "description": "An array of one or more rules",
                          "items": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "bins"
                                ],
                                "description": "name of rules"
                              },
                              "list": {
                                "type": "array",
                                "description": "value of bins"
                              },
                              "decline_message": {
                                "type": "string",
                                "description": "Custom decline message for this rule"
                              }
                            }
                          }
                        }
                      }
                    },
                    "subscription": {
                      "type": "object",
                      "description": "to be populated if this payment link is for a recurring payment. Otherwise, this property can be left out. REQUIRES Premium Business Plan to be enabled.",
                      "properties": {
                        "frequency": {
                          "type": "string",
                          "enum": [
                            "annually",
                            "monthly",
                            "weekly"
                          ],
                          "description": "defines the interval that this subscription will be run on."
                        },
                        "frequency_interval": {
                          "type": "integer",
                          "minimum": 1,
                          "description": "defines how often this subscription will run. This will be based on the frequency property defined above."
                        },
                        "end_date": {
                          "type": "string",
                          "pattern": "\\d{4}\\/\\d{2}\\/\\d{2}",
                          "description": "the last date this subscription could run on."
                        },
                        "payment_quantity": {
                          "type": "integer",
                          "description": "number of times this subscription will occur. If end_date defined, end_date takes precedence."
                        }
                      }
                    },
                    "first_name": {
                      "type": "string",
                      "description": "The first name of customer which will pre-populate in card info step."
                    },
                    "last_name": {
                      "type": "string",
                      "description": "The last name of customer which will pre-populate in card info step."
                    },
                    "email": {
                      "type": "string",
                      "description": "The email of customer which will pre-populate in card info step."
                    },
                    "payouts_share": {
                      "type": "object",
                      "properties": {
                        "recipient_id": {
                          "type": "string",
                          "description": "The ID of an already added recipient that the transaction amount will be shared with."
                        },
                        "percentage_to_recipient": {
                          "type": "number",
                          "description": "The percentage of the transaction amount that will be sent to the recipient."
                        },
                        "recipient_pays_fees": {
                          "type": "boolean",
                          "description": "Whether Mamo fees for a given transaction will be passed on to the recipient."
                        }
                      }
                    },
                    "custom_data": {
                      "type": "object"
                    },
                    "charges": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "string",
                            "enum": [
                              "confirmation_required",
                              "captured",
                              "refund_initiated",
                              "processing",
                              "failed",
                              "refunded"
                            ]
                          },
                          "id": {
                            "type": "string"
                          },
                          "amount": {
                            "type": "number"
                          },
                          "refund_amount": {
                            "type": "number"
                          },
                          "refund_status": {
                            "type": "string"
                          },
                          "billing_descriptor": {
                            "type": "string"
                          },
                          "custom_data": {
                            "type": "object"
                          },
                          "created_date": {
                            "type": "string"
                          },
                          "subscription_id": {
                            "type": "string"
                          },
                          "settlement_amount": {
                            "type": "number"
                          },
                          "settlement_currency": {
                            "type": "string"
                          },
                          "settlement_date": {
                            "type": "string"
                          },
                          "customer_details": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "email": {
                                "type": "string"
                              },
                              "phone_number": {
                                "type": "string"
                              },
                              "comment": {
                                "type": "string"
                              }
                            }
                          },
                          "payment_method": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string"
                              },
                              "card_holder_name": {
                                "type": "string"
                              },
                              "card_last4": {
                                "type": "string"
                              },
                              "origin": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "example": {
                    "name": "Chocolate Box - Small",
                    "description": "12pcs Chocolate Box",
                    "capacity": 1,
                    "active": true,
                    "return_url": "https://myawesomewebsite.com/paymentSuccess",
                    "processing_fee_percentage": 3,
                    "amount": 119.99,
                    "amount_currency": "AED",
                    "enable_message": true,
                    "enable_tips": true,
                    "enable_tabby": true,
                    "link_type": "modal",
                    "enable_customer_details": true,
                    "save_card": "optional",
                    "hold_and_charge_later": false,
                    "payment_methods": [
                      "card",
                      "wallet"
                    ],
                    "rules": {
                      "allowed": [
                        {
                          "type": "bins"
                        },
                        {
                          "list": [
                            "424242"
                          ]
                        },
                        {
                          "decline_message": "Custom decline message for this rule"
                        }
                      ]
                    },
                    "subscription": {
                      "frequency": "monthly",
                      "frequency_interval": 1,
                      "end_date": "2023/01/31",
                      "payment_quantity": 5
                    },
                    "first_name": "first name",
                    "last_name": "last name",
                    "email": "email@mamopay.com",
                    "payouts_share": {
                      "recipient_id": "REP-123",
                      "percentage_to_recipient": 10,
                      "recipient_pays_fees": false
                    },
                    "custom_data": {
                      "val1": true,
                      "val2": "custom value"
                    },
                    "charges": [
                      {
                        "status": "captured"
                      },
                      {
                        "id": "MPB-CHRG-E0CE93E071"
                      },
                      {
                        "amount": 100
                      },
                      {
                        "refund_amount": 0
                      },
                      {
                        "refund_status": "No refund"
                      },
                      {
                        "billing_descriptor": "Mamo*Merchant"
                      },
                      {
                        "custom_data": {
                          "internal_customer_id": "0114120d-c394-4cce-9cdb-4ccbae605748",
                          "val1": true,
                          "val2": "custom value"
                        }
                      },
                      {
                        "created_date": "2023-05-31-11-18-57"
                      },
                      {
                        "subscription_id": "MPB-SUB-B764EDCBA2"
                      },
                      {
                        "settlement_amount": 356.42
                      },
                      {
                        "settlement_currency": "AED"
                      },
                      {
                        "settlement_date": "05/06/2023"
                      },
                      {
                        "customer_details": {
                          "name": "Mamo User",
                          "email": "email@mamopay.com",
                          "phone_number": "+971551234567",
                          "comment": "Dolore voluptate possimus et."
                        }
                      },
                      {
                        "payment_method": {
                          "type": "CREDIT VISA",
                          "card_holder_name": "Mamo User",
                          "card_last4": "•••• 4242",
                          "origin": "UAE card"
                        }
                      }
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorised",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "messages": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "messages": [
                      "Unauthorized"
                    ],
                    "error_code": "UNAUTHORIZED"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "messages": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "messages": [
                      "Merchant::Link record was not found"
                    ],
                    "error_code": "RECORD_NOT_FOUND"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/charges": {
      "get": {
        "servers": [
          {
            "url": "https://business.mamopay.com/manage_api/v1/charges",
            "description": "Production server"
          },
          {
            "url": "https://sandbox.dev.business.mamopay.com/manage_api/v1/charges",
            "description": "Sandbox server"
          }
        ],
        "tags": [
          "Transactions"
        ],
        "summary": "Fetching Transactions",
        "description": "Fetches all transactions for a given business\n\n",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            },
            "example": 1
          },
          {
            "in": "query",
            "name": "per_page",
            "schema": {
              "type": "integer"
            },
            "example": 10
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer <your sandbox api key>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "default": "MPB-CHRG-D8B07FB8D7"
                          },
                          "status": {
                            "type": "string",
                            "default": "captured"
                          },
                          "amount": {
                            "type": "number",
                            "default": 122.87
                          },
                          "amount_currency": {
                            "type": "string",
                            "default": "AED"
                          },
                          "refund_amount": {
                            "type": "string",
                            "default": 0
                          },
                          "refund_status": {
                            "type": "string",
                            "default": "No refund"
                          },
                          "billing_descriptor": {
                            "type": "string"
                          },
                          "custom_data": {
                            "type": "object"
                          },
                          "created_date": {
                            "type": "string"
                          },
                          "subscription_id": {
                            "type": "string",
                            "description": "Value is set for recurring payments only. For one-time payments, this will be null."
                          },
                          "next_payment_date": {
                            "type": "string",
                            "description": "Value is set for recurring payments only. For one-time payments, this will be null."
                          },
                          "settlement_amount": {
                            "type": "number"
                          },
                          "settlement_currency": {
                            "type": "string"
                          },
                          "settlement_date": {
                            "type": "string"
                          },
                          "customer_details": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "email": {
                                "type": "string"
                              },
                              "phone_number": {
                                "type": "string"
                              },
                              "comment": {
                                "type": "string"
                              }
                            }
                          },
                          "payment_method": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string"
                              },
                              "card_holder_name": {
                                "type": "string"
                              },
                              "card_last4": {
                                "type": "string"
                              },
                              "origin": {
                                "type": "string"
                              }
                            }
                          },
                          "settlement_fee": {
                            "type": "string"
                          },
                          "settlement_vat": {
                            "type": "string"
                          },
                          "payment_link_id": {
                            "type": "string"
                          },
                          "payment_link_url": {
                            "type": "string"
                          },
                          "error_code": {
                            "type": "string"
                          },
                          "error_message": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "pagination_meta": {
                      "type": "object",
                      "properties": {
                        "page": {
                          "type": "number"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "total_pages": {
                          "type": "number"
                        },
                        "next_page": {
                          "type": "number"
                        },
                        "prev_page": {
                          "type": "number"
                        },
                        "from": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "total_count": {
                          "type": "number"
                        }
                      }
                    }
                  },
                  "example": {
                    "data": [
                      {
                        "status": "captured"
                      },
                      {
                        "id": "MPB-CHRG-E0CE93E071"
                      },
                      {
                        "amount": 100
                      },
                      {
                        "refund_amount": 0
                      },
                      {
                        "refund_status": "No refund"
                      },
                      {
                        "billing_descriptor": "Mamo*Merchant"
                      },
                      {
                        "custom_data": {
                          "internal_customer_id": "0114120d-c394-4cce-9cdb-4ccbae605748",
                          "val1": true,
                          "val2": "custom value"
                        }
                      },
                      {
                        "created_date": "2023-05-31-11-18-57"
                      },
                      {
                        "subscription_id": "MPB-SUB-B764EDCBA2"
                      },
                      {
                        "next_payment_date": "05/06/2023"
                      },
                      {
                        "settlement_amount": 356.42
                      },
                      {
                        "settlement_currency": "AED"
                      },
                      {
                        "settlement_date": "05/06/2023"
                      },
                      {
                        "customer_details": {
                          "name": "Mamo User",
                          "email": "email@mamopay.com",
                          "phone_number": "+971551234567",
                          "comment": "Dolore voluptate possimus et."
                        }
                      },
                      {
                        "payment_method": {
                          "type": "CREDIT VISA",
                          "card_holder_name": "Mamo User",
                          "card_last4": "•••• 4242",
                          "origin": "UAE card"
                        }
                      },
                      {
                        "settlement_fee": "AED 3.20"
                      },
                      {
                        "settlement_vat": "AED 0.16"
                      },
                      {
                        "payment_link_id": "MB-LINK-01E6ADB6DE"
                      },
                      {
                        "payment_link_url": "https://staging.business.mamopay.com/pay/dong22-579f10"
                      },
                      {
                        "error_code": "generic"
                      },
                      {
                        "error_message": "Unknown reason - user should contact their bank to find out"
                      }
                    ],
                    "pagination_meta": {
                      "page": 1,
                      "per_page": 10,
                      "total_pages": 5,
                      "next_page": 2,
                      "prev_page": null,
                      "from": 1,
                      "to": 10,
                      "total_count": 47
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorised",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "messages": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "messages": [
                      "Unauthorized"
                    ],
                    "error_code": "UNAUTHORIZED"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error"
          }
        }
      },
      "post": {
        "servers": [
          {
            "url": "https://business.mamopay.com/manage_api/v1/charges",
            "description": "Production server"
          },
          {
            "url": "https://sandbox.dev.business.mamopay.com/manage_api/v1/charges",
            "description": "Sandbox server"
          }
        ],
        "tags": [
          "Transactions"
        ],
        "summary": "Initiate Payment",
        "description": "API to initiate transactions by merchant. \n ### About MIT (Merchant Initiated Transaction)\n Merchant Initiated Transactions (MIT) allows a business to use card details, that were stored during previous transactions, to charge their customers.\n \n ### How do MITs work?\n 1- You request a payment link with the option to save the card details.\n 2- You save the charge ID.\n 3- You get the charge details (redirect, GET /charge, or webhook)  which will include the ID of the card used to make the payment, you can save either one of the IDs so you always have access to the card ID.\n 4- You call the below API to initiate a transaction using the same card. ",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "card_id": {
                    "type": "string",
                    "description": "Saved card ID retrieved from the initial transaction made with MIT-enabled link."
                  },
                  "amount": {
                    "type": "number",
                    "description": "Amount to be charged.",
                    "default": 10,
                    "minimum": 1
                  },
                  "currency": {
                    "type": "string",
                    "default": "AED",
                    "description": "The three-letter ISO currency code, default is AED"
                  },
                  "send_customer_receipt": {
                    "type": "boolean",
                    "default": true,
                    "description": "Enables the sending of customer receipts."
                  },
                  "custom_data": {
                    "type": "object",
                    "description": "Key-value object that can be used to pass custom data."
                  },
                  "external_id": {
                    "type": "string",
                    "description": "The external ID allows non Mamo IDs to be associated with a given charge."
                  }
                },
                "required": [
                  "card_id",
                  "amount"
                ],
                "example": {
                  "card_id": "CARD-5DF50209F8",
                  "amount": 10,
                  "custom_data": {
                    "internal_customer_id": "0114120d-c394-4cce-9cdb-4ccbae605748",
                    "val1": true,
                    "val2": "custom value"
                  },
                  "external_id": "ORDER-12345"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer <your sandbox api key>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "captured",
                        "failed"
                      ]
                    },
                    "id": {
                      "type": "string"
                    },
                    "amount": {
                      "type": "number"
                    },
                    "amount_currency": {
                      "type": "string"
                    },
                    "refund_amount": {
                      "type": "number"
                    },
                    "refund_status": {
                      "type": "string"
                    },
                    "billing_descriptor": {
                      "type": "string"
                    },
                    "custom_data": {
                      "type": "object"
                    },
                    "created_date": {
                      "type": "string"
                    },
                    "subscription_id": {
                      "type": "string",
                      "description": "Value is set for recurring payments only. For one-time payments, this will be null."
                    },
                    "next_payment_date": {
                      "type": "string",
                      "description": "Value is set for recurring payments only. For one-time payments, this will be null."
                    },
                    "settlement_amount": {
                      "type": "number"
                    },
                    "settlement_currency": {
                      "type": "string"
                    },
                    "settlement_date": {
                      "type": "string"
                    },
                    "customer_details": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "email": {
                          "type": "string"
                        },
                        "phone_number": {
                          "type": "string"
                        },
                        "comment": {
                          "type": "string"
                        }
                      }
                    },
                    "payment_method": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string"
                        },
                        "card_holder_name": {
                          "type": "string"
                        },
                        "card_last4": {
                          "type": "string"
                        },
                        "origin": {
                          "type": "string"
                        }
                      }
                    },
                    "error_code": {
                      "type": "string"
                    },
                    "error_message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "status": "captured",
                    "id": "MPB-CHRG-E0CE93E071",
                    "amount": 100,
                    "amount_currency": "AED",
                    "refund_amount": 0,
                    "refund_status": "No refund",
                    "billing_descriptor": "Mamo*Merchant",
                    "custom_data": {
                      "internal_customer_id": "0114120d-c394-4cce-9cdb-4ccbae605748",
                      "val1": true,
                      "val2": "custom value"
                    },
                    "created_date": "2023-05-31-11-18-57",
                    "subscription_id": "MPB-SUB-B764EDCBA2",
                    "next_payment_date": "05/06/2023",
                    "settlement_amount": 356.42,
                    "settlement_currency": "AED",
                    "settlement_date": "05/06/2023",
                    "customer_details": {
                      "name": "Mamo User",
                      "email": "email@mamopay.com",
                      "phone_number": "+971551234567",
                      "comment": "Dolore voluptate possimus et."
                    },
                    "payment_method": {
                      "type": "CREDIT VISA",
                      "card_holder_name": "Mamo User",
                      "card_last4": "•••• 4242",
                      "origin": "UAE card"
                    },
                    "error_code": "generic",
                    "error_message": "Unknown reason - user should contact their bank to find out"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Unauthorised",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "messages": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "messages": [
                      "Unauthorized"
                    ],
                    "error_code": "UNAUTHORIZED"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "messages": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "messages": [
                      "Card does not exist"
                    ],
                    "error_code": "UNPROCESSABLE ENTITY"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "number"
                    },
                    "error": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "status": 500,
                    "error": "Internal Server Error"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/charges/{chargeId}": {
      "get": {
        "servers": [
          {
            "url": "https://business.mamopay.com/manage_api/v1/charges/{chargeId}",
            "description": "Production server"
          },
          {
            "url": "https://sandbox.dev.business.mamopay.com/manage_api/v1/charges/{chargeId}",
            "description": "Production server"
          }
        ],
        "tags": [
          "Transactions"
        ],
        "summary": "Fetch Transaction Info",
        "description": "This API enables you to retrieve detailed information about a specific charge by providing the charge ID.\n It is designed to give you a comprehensive view of transaction details.\n\n",
        "parameters": [
          {
            "in": "path",
            "name": "chargeId",
            "schema": {
              "type": "string",
              "default": "MPB-CHRG-E0CE93E071"
            },
            "required": true,
            "description": "Transaction ID / Charge ID",
            "example": "MPB-CHRG-E0CE93E071"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer <your sandbox api key>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "confirmation_required",
                        "captured",
                        "refund_initiated",
                        "processing",
                        "failed",
                        "refunded"
                      ]
                    },
                    "id": {
                      "type": "string"
                    },
                    "amount": {
                      "type": "number"
                    },
                    "amount_currency": {
                      "type": "string"
                    },
                    "refund_amount": {
                      "type": "number"
                    },
                    "refund_status": {
                      "type": "string"
                    },
                    "billing_descriptor": {
                      "type": "string"
                    },
                    "custom_data": {
                      "type": "object"
                    },
                    "created_date": {
                      "type": "string"
                    },
                    "subscription_id": {
                      "type": "string",
                      "description": "Value is set for recurring payments only. For one-time payments, this will be null."
                    },
                    "next_payment_date": {
                      "type": "string",
                      "description": "Value is set for recurring payments only. For one-time payments, this will be null."
                    },
                    "settlement_amount": {
                      "type": "number"
                    },
                    "settlement_currency": {
                      "type": "string"
                    },
                    "settlement_date": {
                      "type": "string"
                    },
                    "customer_details": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "email": {
                          "type": "string"
                        },
                        "phone_number": {
                          "type": "string"
                        },
                        "comment": {
                          "type": "string"
                        }
                      }
                    },
                    "payment_method": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "CREDIT MASTERCARD",
                            "CREDIT VISA",
                            "CREDIT AMERICAN EXPRESS",
                            "DEBIT MASTERCARD",
                            "DEBIT VISA",
                            "DEBIT AMERICAN EXPRESS"
                          ]
                        },
                        "card_holder_name": {
                          "type": "string"
                        },
                        "card_last4": {
                          "type": "string"
                        },
                        "origin": {
                          "type": "string"
                        }
                      }
                    },
                    "error_code": {
                      "type": "string"
                    },
                    "error_message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "status": "captured",
                    "id": "MPB-CHRG-E0CE93E071",
                    "amount": 100,
                    "amount_currency": "AED",
                    "refund_amount": 0,
                    "refund_status": "No refund",
                    "billing_descriptor": "Mamo*Merchant",
                    "custom_data": {
                      "internal_customer_id": "0114120d-c394-4cce-9cdb-4ccbae605748",
                      "val1": true,
                      "val2": "custom value"
                    },
                    "created_date": "2023-05-31-11-18-57",
                    "subscription_id": "MPB-SUB-B764EDCBA2",
                    "next_payment_date": "05/06/2023",
                    "settlement_amount": 356.42,
                    "settlement_currency": "AED",
                    "settlement_date": "05/06/2023",
                    "customer_details": {
                      "name": "Mamo User",
                      "email": "email@mamopay.com",
                      "phone_number": "+971551234567",
                      "comment": "Dolore voluptate possimus et."
                    },
                    "payment_method": {
                      "type": "CREDIT VISA",
                      "card_holder_name": "Mamo User",
                      "card_last4": "•••• 4242",
                      "origin": "UAE card"
                    },
                    "error_code": "generic",
                    "error_message": "Unknown reason - user should contact their bank to find out"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorised",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "messages": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "messages": [
                      "Unauthorized"
                    ],
                    "error_code": "UNAUTHORIZED"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "messages": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "messages": [
                      "Charge record was not found"
                    ],
                    "error_code": "RECORD_NOT_FOUND"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/charges/{chargeId}/refunds": {
      "post": {
        "servers": [
          {
            "url": "https://business.mamopay.com/manage_api/v1/charges/{chargeId}/refunds",
            "description": "Production server"
          },
          {
            "url": "https://sandbox.dev.business.mamopay.com/manage_api/v1/charges/{chargeId}/refunds",
            "description": "Sandbox server"
          }
        ],
        "tags": [
          "Transactions"
        ],
        "summary": "Refund Payment",
        "description": "API to refund the charge. \n\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "amount": {
                    "type": "number",
                    "description": "Amount to be refunded. Only AED transfers supported",
                    "default": 10,
                    "minimum": 1
                  }
                },
                "required": [
                  "amount"
                ],
                "example": {
                  "amount": 10
                }
              }
            }
          }
        },
        "parameters": [
          {
            "in": "path",
            "name": "chargeId",
            "schema": {
              "type": "string",
              "default": "MB-LINK-D8B07FB8C7"
            },
            "required": true,
            "description": "Transaction ID / Charge ID",
            "example": "MB-LINK-D8B07FB8C7"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer <your sandbox api key>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "refund_status": {
                      "type": "string"
                    },
                    "refund_amount": {
                      "type": "number"
                    }
                  },
                  "example": {
                    "refund_amount": "20.0,",
                    "refund_status": "success"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Unauthorised",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "messages": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "messages": [
                      "Unauthorized"
                    ],
                    "error_code": "UNAUTHORIZED"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "messages": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "messages": [
                      "Can not refund this payment"
                    ],
                    "error_code": "UNPROCESSABLE ENTITY"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "number"
                    },
                    "error": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "status": 500,
                    "error": "Internal Server Error"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/charges/{chargeId}/captures": {
      "post": {
        "servers": [
          {
            "url": "https://business.mamopay.com/manage_api/v1/charges/{chargeId}/captures",
            "description": "Production server"
          },
          {
            "url": "https://sandbox.dev.business.mamopay.com/manage_api/v1/charges/{chargeId}/captures",
            "description": "Sandbox server"
          }
        ],
        "tags": [
          "Transactions"
        ],
        "summary": "Capture Payment",
        "description": "API to capture an \"On hold\" charge. \n\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "amount": {
                    "type": "number",
                    "description": "Amount to be captured. Must be less than or equal to the charge's amount."
                  }
                },
                "required": [
                  "amount"
                ],
                "example": {
                  "amount": 122.87
                }
              }
            }
          }
        },
        "parameters": [
          {
            "in": "path",
            "name": "chargeId",
            "schema": {
              "type": "string",
              "default": "CHG-D8B07FB8D7"
            },
            "required": true,
            "description": "Transaction ID / Charge ID",
            "example": "CHG-D8B07FB8D7"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer <your sandbox api key>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "default": "CHG-D8B07FB8D7"
                    },
                    "status": {
                      "type": "string",
                      "default": "captured"
                    },
                    "amount": {
                      "type": "number",
                      "default": 122.87
                    },
                    "amount_currency": {
                      "type": "string",
                      "default": "AED"
                    },
                    "refund_amount": {
                      "type": "string",
                      "default": 0
                    },
                    "refund_status": {
                      "type": "string",
                      "default": "No refund"
                    },
                    "billing_descriptor": {
                      "type": "string"
                    },
                    "custom_data": {
                      "type": "object"
                    },
                    "created_date": {
                      "type": "string"
                    },
                    "subscription_id": {
                      "type": "string",
                      "description": "Value is set for recurring payments only. For one-time payments, this will be null."
                    },
                    "next_payment_date": {
                      "type": "string",
                      "description": "Value is set for recurring payments only. For one-time payments, this will be null."
                    },
                    "settlement_amount": {
                      "type": "number"
                    },
                    "settlement_currency": {
                      "type": "string"
                    },
                    "settlement_date": {
                      "type": "string"
                    },
                    "customer_details": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "email": {
                          "type": "string"
                        },
                        "phone_number": {
                          "type": "string"
                        },
                        "comment": {
                          "type": "string"
                        }
                      }
                    },
                    "payment_method": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string"
                        },
                        "card_holder_name": {
                          "type": "string"
                        },
                        "card_last4": {
                          "type": "string"
                        },
                        "origin": {
                          "type": "string"
                        }
                      }
                    },
                    "settlement_fee": {
                      "type": "string"
                    },
                    "settlement_vat": {
                      "type": "string"
                    },
                    "payment_link_id": {
                      "type": "string"
                    },
                    "payment_link_url": {
                      "type": "string"
                    },
                    "error_code": {
                      "type": "string"
                    },
                    "error_message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Unauthorised",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "messages": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "messages": [
                      "Unauthorized"
                    ],
                    "error_code": "UNAUTHORIZED"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "messages": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "messages": [
                      "Can not capture this payment"
                    ],
                    "error_code": "UNPROCESSABLE ENTITY"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "number"
                    },
                    "error": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "status": 500,
                    "error": "Internal Server Error"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/charges/{chargeId}/reverses": {
      "post": {
        "servers": [
          {
            "url": "https://business.mamopay.com/manage_api/v1/charges/{chargeId}/reverses",
            "description": "Production server"
          },
          {
            "url": "https://sandbox.dev.business.mamopay.com/manage_api/v1/charges/{chargeId}/reverses",
            "description": "Sandbox server"
          }
        ],
        "tags": [
          "Transactions"
        ],
        "summary": "Reverse Payment",
        "description": "API to reverse an \"On hold\" charge. \n\n",
        "parameters": [
          {
            "in": "path",
            "name": "chargeId",
            "schema": {
              "type": "string",
              "default": "CHG-D8B07FB8D7"
            },
            "required": true,
            "description": "Transaction ID / Charge ID",
            "example": "CHG-D8B07FB8D7"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer <your sandbox api key>"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "default": "CHG-D8B07FB8D7"
                    },
                    "status": {
                      "type": "string",
                      "default": "voided"
                    },
                    "amount": {
                      "type": "number",
                      "default": 122.87
                    },
                    "amount_currency": {
                      "type": "string",
                      "default": "AED"
                    },
                    "refund_amount": {
                      "type": "string",
                      "default": 0
                    },
                    "refund_status": {
                      "type": "string",
                      "default": "No refund"
                    },
                    "billing_descriptor": {
                      "type": "string"
                    },
                    "custom_data": {
                      "type": "object"
                    },
                    "created_date": {
                      "type": "string"
                    },
                    "subscription_id": {
                      "type": "string",
                      "description": "Value is set for recurring payments only. For one-time payments, this will be null."
                    },
                    "next_payment_date": {
                      "type": "string",
                      "description": "Value is set for recurring payments only. For one-time payments, this will be null."
                    },
                    "settlement_amount": {
                      "type": "number"
                    },
                    "settlement_currency": {
                      "type": "string"
                    },
                    "settlement_date": {
                      "type": "string"
                    },
                    "customer_details": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "email": {
                          "type": "string"
                        },
                        "phone_number": {
                          "type": "string"
                        },
                        "comment": {
                          "type": "string"
                        }
                      }
                    },
                    "payment_method": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string"
                        },
                        "card_holder_name": {
                          "type": "string"
                        },
                        "card_last4": {
                          "type": "string"
                        },
                        "origin": {
                          "type": "string"
                        }
                      }
                    },
                    "settlement_fee": {
                      "type": "string"
                    },
                    "settlement_vat": {
                      "type": "string"
                    },
                    "payment_link_id": {
                      "type": "string"
                    },
                    "payment_link_url": {
                      "type": "string"
                    },
                    "error_code": {
                      "type": "string"
                    },
                    "error_message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Unauthorised",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "messages": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "messages": [
                      "Unauthorized"
                    ],
                    "error_code": "UNAUTHORIZED"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "messages": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "messages": [
                      "Can not reverse this payment"
                    ],
                    "error_code": "UNPROCESSABLE ENTITY"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "number"
                    },
                    "error": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "status": 500,
                    "error": "Internal Server Error"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}